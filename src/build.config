#!/bin/sh -e
SYSTEM=$(uname -s)
SCRIPT=$(src/scripts/readlink.sh $0)
BASEDIR=$(dirname "${SCRIPT}")
BUILDDIR="$BASEDIR/build"

args=$(getopt cdptl $*)
if test $? != 0; then
	echo "Usage: $0 [-dcptl]"
	exit 1
fi

set -- $args

BUILD_TYPE=Release
TEST_ENABLED=0
COVERAGE_ENABLED=0

for i ; do
	case "$i" in

    -t)
      if test ! -f "${BASEDIR}/src/tests/googletest/CMakeLists.txt"; then
        echo "Did you checkout recursively? We need googletest to run the unit tests."
        echo "Please execute"
        echo "   git submodule update --init --recursive"
        echo 
        exit 1
      fi
      TEST_ENABLED=1
      COVERAGE_ENABLED=1

      if ! command -v lcov; then
        echo "lcov is required to run the tests; please install it"
        echo
        exit 1
      fi

      # -t requires DEBUG code, so... :
      BUILD_TYPE=Debug
      CC=gcc-7
      CXX=g++-7
      CMAKE_OPTIONS="${CMAKE_OPTIONS} -DCMAKE_LINKER=/usr/local/bin/g++-7"
      ;;

	  -c)
      BUILD_TYPE=Debug
      CC=gcc-7
      CXX=g++-7
      CMAKE_OPTIONS="${CMAKE_OPTIONS} -DCMAKE_LINKER=/usr/local/bin/g++-7"
    ;;

		-d)
			BUILD_TYPE=Debug
		;;

		-p)
			CMAKE_OPTIONS="${CMAKE_OPTIONS} -DUSE_PYTHON=ON"
		;;

		-l)
			CMAKE_OPTIONS="${CMAKE_OPTIONS} -DUSE_LUA=ON"
		;;
	
		--)
			break
		;;
	
		*)
			echo "Invalid Parameter: '$1'"
			exit 1
		;;
	esac
done
CMAKE_OPTIONS="${CMAKE_OPTIONS} -DTEST_ENABLED=${TEST_ENABLED}"
CMAKE_OPTIONS="${CMAKE_OPTIONS} -DCOVERAGE_ENABLED=${COVERAGE_ENABLED}"
CMAKE_OPTIONS="${CMAKE_OPTIONS} -DCMAKE_BUILD_TYPE=${BUILD_TYPE}"

